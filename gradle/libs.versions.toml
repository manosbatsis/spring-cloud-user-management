[versions]
awaitility-version = '4.2.0'
awaitility-proxy-version = '3.1.6'
buildconfig-version = '3.1.0'
cassandra-unit-version = '4.3.1.0'
dokka-version = '1.8.10'
evo-inflector-version = '1.3'
flapdoodle-mongo-version = '4.6.2'
greenmail-junit5-version = '2.0.0'
javafaker-version = '1.0.2'
junit-version = '5.8.2'
kotlinpoet-version = '1.12.0'
kotlin-version = '1.8.10'
kotlin-utils-version = '0.37'
mapstruct-version = '1.5.5.Final'
nexus-publish-version = '1.1.0'
spring-boot-version = '3.0.5'
spring-cloud-version = '2022.0.2'
spring-cloud-stream-version = '4.0.2'
spring-cloud-stream-schema-version = '2.2.1.RELEASE'
spring-cloud-schema-registry-client-version = '1.1.5'
spring-boot-management-version = '1.1.0'
springdoc-version = '1.6.9'
springdoc-openapi-starter-webmvc-ui-version = '2.1.0'
spotless-version = '6.18.0'
strikt-version = '0.33.0'
testcontainers-version = '1.18.0'
perplexhub-rsql-version = '6.0.4'
wimdeblauwe-error-handling-spring-boot-version = '4.1.0'

confluent-kafka-serde-tools-package-version = '7.3.3'
confluent-kafka-avro-serializer-version = '5.3.0'
confluent-kafka-schema-registry-client-version = '5.3.0'

[libraries]
awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility-version" }
awaitility-proxy = { module = "org.awaitility:awaitility-proxy", version.ref = "awaitility-proxy-version" }
cassandra-unit-spring = { module = "org.cassandraunit:cassandra-unit-spring", version.ref = "cassandra-unit-version" }
evo-inflector = { module = "org.atteo:evo-inflector", version.ref = "evo-inflector-version" }
greenmail-junit5 = { module = "com.icegreen:greenmail-junit5", version.ref = "greenmail-junit5-version" }
javafaker = { module = "com.github.javafaker:javafaker", version.ref = "javafaker-version" }
junit = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-version" }
kotlinpoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet-version" }
kotlin-utils-api = { module = "com.github.manosbatsis.kotlin-utils:kotlin-utils-api", version.ref = "kotlin-utils-version" }
kotlin-utils-kapt = { module = "com.github.manosbatsis.kotlin-utils:kotlin-utils-kapt", version.ref = "kotlin-utils-version" }
mapstruct-core = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct-version" }
mapstruct-processor = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct-version" }
strikt = { module = "io.strikt:strikt-core", version.ref = "strikt-version" }
springdoc-openapi-starter-webmvc-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc-openapi-starter-webmvc-ui-version" }
spring-boot-dependencies = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "spring-boot-version" }
spring-cloud-dependencies = { module = "org.springframework.cloud:spring-cloud-dependencies", version.ref = "spring-cloud-version" }
spring-cloud-schema-registry-client = { module = "org.springframework.cloud:spring-cloud-schema-registry-client", version.ref = "spring-cloud-schema-registry-client-version" }
spring-cloud-stream-dependencies = { module = "org.springframework.cloud:spring-cloud-stream-dependencies", version.ref = "spring-cloud-stream-version" }
spring-cloud-stream-schema = { module = "org.springframework.cloud:spring-cloud-stream-schema", version.ref = "spring-cloud-stream-schema-version" }
springdoc-openapi-kotlin = { module = "org.springdoc:springdoc-openapi-kotlin", version.ref = "springdoc-version" }
testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers-version" }
rsql-jpa-spring-boot-starter = { module = "io.github.perplexhub:rsql-jpa-spring-boot-starter", version.ref = "perplexhub-rsql-version" }
error-handling-spring-boot-starter = { module = "io.github.wimdeblauwe:error-handling-spring-boot-starter", version.ref = "wimdeblauwe-error-handling-spring-boot-version" }
flapdoodle-mongo = { module = "de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring30x", version.ref = "flapdoodle-mongo-version" }
confluent-kafka-serde-tools-package-serializer = { module = "io.confluent:kafka-serde-tools-package", version.ref = "confluent-kafka-serde-tools-package-version" }
confluent-kafka-avro-serializer = { module = "io.confluent:kafka-avro-serializer", version.ref = "confluent-kafka-avro-serializer-version" }
confluent-kafka-schema-registry-client = { module = "io.confluent:kafka-schema-registry-client", version.ref = "confluent-kafka-schema-registry-client-version" }

[bundles]
confluent-kafka-avro = ["confluent-kafka-serde-tools-package-serializer", "confluent-kafka-avro-serializer", "confluent-kafka-schema-registry-client"]

[plugins]
buildconfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildconfig-version" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka-version" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin-version" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin-version" }
kotlin-noarg = { id = "org.jetbrains.kotlin.plugin.noarg", version.ref = "kotlin-version" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin-version" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin-version" }
nexus-publish = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "nexus-publish-version" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot-version" }
spring-dependencymanager = { id = "io.spring.dependency-management", version.ref = "spring-boot-management-version" }
spotless = { id = "com.diffplug.spotless", version.ref = "spotless-version" }
