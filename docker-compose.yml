version: '3.8'

services:

    mysql:
        image: mysql:5.7.41
        container_name: mysql
        restart: unless-stopped
        ports:
            - "3306:3306"
        environment:
            - MYSQL_ROOT_PASSWORD=secret
            - MYSQL_DATABASE=userdb
        healthcheck:
            test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"

    cassandra:
        image: cassandra:4.1.1
        container_name: cassandra
        restart: always
        ports:
            - "9042:9042"
            - "7199:7199"
            - "9160:9160"
        environment:
            - "MAX_HEAP_SIZE=256M"
            - "HEAP_NEWSIZE=128M"
        volumes:
            - ./out/cassandra_data:/var/lib/cassandra
        healthcheck:
            #test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]
            test: [ "CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces" ]
            interval: 15s
            timeout: 10s
            retries: 10

    cassandra-load-keyspace:
        container_name: cassandra-load-keyspace
        image: cassandra:4.1.1
        depends_on:
            - cassandra
        volumes:
            - ./event-service/src/main/resources/event-service.cql:/schema.cql
        command: /bin/bash -c "sleep 60 && echo loading cassandra keyspace && cqlsh cassandra -f /schema.cql"

    zookeeper:
        image: confluentinc/cp-zookeeper:7.3.1
        container_name: zookeeper
        restart: unless-stopped
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
        healthcheck:
            test: "echo stat | nc localhost $$ZOOKEEPER_CLIENT_PORT"

    kafka:
        image: confluentinc/cp-kafka:7.3.1
        container_name: kafka
        restart: unless-stopped
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
            - "29092:29092"
        environment:
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        healthcheck:
            test: [ "CMD", "nc", "-z", "localhost", "9092" ]

    schema-registry:
        image: confluentinc/cp-schema-registry:7.3.1
        container_name: schema-registry
        restart: unless-stopped
        depends_on:
            - kafka
        ports:
            - "8081:8081"
        environment:
            SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:9092
            SCHEMA_REGISTRY_HOST_NAME: schema-registry
            SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
        healthcheck:
            test: "curl -f http://localhost:8081 || exit 1"

    schema-registry-ui:
        image: landoop/schema-registry-ui:0.9.5
        container_name: kafka-schema-registry-ui
        depends_on:
            - schema-registry
        ports:
            - "8001:8000"
        environment:
            SCHEMAREGISTRY_URL: http://schema-registry:8081
            PROXY: "true"
        healthcheck:
            test: "wget --quiet --tries=1 --spider http://localhost:8000 || exit 1"

    kafka-rest-proxy:
        image: confluentinc/cp-kafka-rest:7.3.1
        container_name: kafka-rest-proxy
        restart: unless-stopped
        depends_on:
            - zookeeper
            - kafka
        ports:
            - "8082:8082"
        environment:
            KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
            KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_REST_HOST_NAME: kafka-rest-proxy
            KAFKA_REST_LISTENERS: http://0.0.0.0:8082
            KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081
            KAFKA_REST_CONSUMER_REQUEST_TIMEOUT_MS: 30000
        healthcheck:
            test: "curl -f http://localhost:8082 || exit 1"

    kafka-topics-ui:
        image: landoop/kafka-topics-ui:0.9.4
        container_name: kafka-topics-ui
        restart: unless-stopped
        depends_on:
            - kafka-rest-proxy
        ports:
            - "8085:8000"
        environment:
            KAFKA_REST_PROXY_URL: http://kafka-rest-proxy:8082
            PROXY: "true"
        healthcheck:
            test: "wget --quiet --tries=1 --spider http://localhost:8000 || exit 1"

    kafka-manager:
        image: hlebalbau/kafka-manager:3.0.0.5
        container_name: kafka-manager
        restart: unless-stopped
        depends_on:
            - zookeeper
        ports:
            - "9000:9000"
        environment:
            ZK_HOSTS: zookeeper:2181
            APPLICATION_SECRET: "random-secret"
        command: -Dpidfile.path=/dev/null
        healthcheck:
            test: "curl -f http://localhost:9000 || exit 1"

    zipkin:
        image: openzipkin/zipkin:2.24.0
        container_name: zipkin
        restart: unless-stopped
        ports:
            - "9411:9411"
        healthcheck:
            test: [ "CMD", "nc", "-z", "localhost", "9411" ]

    greenmail:
        image: greenmail/standalone:latest
        container_name: greenmail
        environment:
            - JAVA_OPTS=-Dgreenmail.verbose
        ports:
            - 3025:3025 # SMTP
            #- 3110:3110 # POP3
            #- 3143:3143 # IMAP
            #- 3465:3465 # SMTPS
            #- 3993:3993 # IMAPS
            #- 3995:3995 # POP3S
            - 9079:8080 # API
        healthcheck:
            test: "curl -f http://localhost:9079 || exit 1"

    config-service:
        image: manosbatsis/config-service:1.0.0
        container_name: config-service
        ports:
            - "8088:8088"
        healthcheck:
            test: curl --fail http://localhost:8088/user/default  || exit 1
            interval: 5s
            timeout: 3s
            retries: 6
#
#    discovery-service:
#        image: manosbatsis/discovery-service:1.0.0
#        container_name: discovery-service
#        ports:
#            - "8761:8761"
#        depends_on:
#            config-service:
#                condition: service_healthy
#        healthcheck:
#            test: curl --fail http://localhost:8761/eureka/v2/apps || exit 1
#            interval: 4s
#            timeout: 3s
#            retries: 6
#        environment:
#            SPRING_PROFILES_ACTIVE: docker
